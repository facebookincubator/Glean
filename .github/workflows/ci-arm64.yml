name: CI-ARM64
on: [push]

env:
  LANG: en_US.UTF-8

jobs:
  ci-arm64:
    strategy:
      fail-fast: false
      matrix:
        ghc: [8.10.7]
    runs-on: [self-hosted, linux, ARM64]
    container:
      # built from hsthrift/.github/workflows/Dockerfile.arm64v8
      image: ghcr.io/donsbot/hsthrift/ci-base:arm64rocksdb
      options: --cpus 8
    steps:
      - name: Clean up old container
        run: |
          rm -rf "$HOME"/.hsthrift
          rm -rf "$HOME"/.cabal
          rm -rf "$HOME"/.ghcup/bin
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install additional tools
        run: |
          apt-get update
          apt install -y libxxhash-dev m4 rsync wget unzip clang-11 libclang-11-dev llvm-11-dev libgmock-dev

      - name: Make utf8 default locale
        run: |
          apt-get install -y locales
          locale-gen en_US.UTF-8
          update-locale LANG=en_US.UTF-8

      - name: Install GHC ${{ matrix.ghc }}
        run: ghcup install ghc ${{ matrix.ghc }} --set --force
      - name: Install cabal-install 3.8
        run: ghcup install cabal -u https://downloads.haskell.org/~cabal/cabal-install-3.8.1.0/cabal-install-3.8.1.0-aarch64-linux-deb10.tar.xz 3.8.1.0 --set

      - name: Install indexer (dotnet)
        run: |
          export DOTNET=7.0
          wget https://dot.net/v1/dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh --channel ${DOTNET}
          export DOTNET_ROOT=$HOME/.dotnet
          $DOTNET_ROOT/dotnet tool install --global scip-dotnet

      - name: Install indexers (flow)
        run: |
          export FLOW=0.209.1
          wget "https://github.com/facebook/flow/releases/download/v${FLOW}/flow-linux-arm64-v${FLOW}.zip"
          unzip "flow-linux-arm64-v${FLOW}.zip"
          mkdir -p "$HOME"/.hsthrift/bin && mv flow/flow "$HOME"/.hsthrift/bin

      - name: Install indexer (typescript)
        run: |
          export NODEARCH=node-v18.0.0-linux-arm64
          curl -LO "https://nodejs.org/dist/v18.0.0/${NODEARCH}.tar.xz"
          tar -xvf "${NODEARCH}.tar.xz"
          cp -r "${NODEARCH}"/* "$HOME"/.hsthrift/
          npm install -g @sourcegraph/scip-typescript

      - name: Install indexer (python)
        run: |
          export NODEARCH=node-v18.0.0-linux-arm64
          curl -LO "https://nodejs.org/dist/v18.0.0/${NODEARCH}.tar.xz"
          tar -xvf "${NODEARCH}.tar.xz"
          cp -r "${NODEARCH}"/* "$HOME"/.hsthrift/
          npm install -g @sourcegraph/scip-python
          apt install -y python3-pip

      - name: Install indexer (rust)
        run: |
          export RUST_ANALYZER=2023-11-06
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
          mkdir -p "$HOME"/.hsthrift/bin
          curl -L https://github.com/rust-analyzer/rust-analyzer/releases/download/${RUST_ANALYZER}/rust-analyzer-aarch64-unknown-linux-gnu.gz | gunzip -c - > "$HOME"/.hsthrift/bin/rust-analyzer
          chmod +x "$HOME"/.hsthrift/bin/rust-analyzer

      - name: Install indexer (java)
        run: |
          apt-get install -y default-jdk maven
          curl -fLo coursier https://git.io/coursier-cli && chmod +x coursier
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-arm64/
          ./coursier bootstrap --standalone -o lsif-java com.sourcegraph:lsif-java_2.13:0.8.0-RC1 --main-class com.sourcegraph.lsif_java.LsifJava
          mkdir -p "$HOME"/.hsthrift/bin && cp lsif-java "$HOME"/.hsthrift/bin

      - name: Install indexer (go)
        run: |
          export GOLANG=1.17.8
          export SCIPGO=0.1.4
          mkdir go-install; cd go-install
          wget "https://go.dev/dl/go${GOLANG}.linux-arm64.tar.gz"
          tar -C "$HOME/.hsthrift" -xzf  "go${GOLANG}.linux-arm64.tar.gz"
          wget "https://github.com/sourcegraph/scip-go/releases/download/v${SCIPGO}/scip-go_${SCIPGO}_linux_arm64.tar.gz"
          tar xzf "scip-go_${SCIPGO}_linux_arm64.tar.gz"
          mkdir -p "$HOME"/.hsthrift/bin && mv scip-go "$HOME"/.hsthrift/bin
          echo "$HOME/.hsthrift/go/bin" >> "$GITHUB_PATH"

    # no hhvm builds yet for arm/linux, so we skip the hack indexer

      - name: Fetch hsthrift and build folly, fizz, wangle, fbthrift
        run: ./install_deps.sh --threads 8 --use-system-libs
      - name: Nuke build artifacts
        run: rm -rf /tmp/fbcode_builder_getdeps-Z__wZGleanZGleanZhsthriftZbuildZfbcode_builder-root/
      - name: Populate hackage index with new packages
        run: cabal update
      - name: Build hsthrift and Glean
        run: make EXTRA_GHC_OPTS="-j4 +RTS -A128m -n2m -RTS"
      - name: Build glass
        run: make glass
      - name: Build glean-clang
        run: make glean-clang
    # disable tests for languages we don't have indexer installed
      - name: Run tests
        run: cabal test glean:tests -f-hack-tests -f-clang-tests
