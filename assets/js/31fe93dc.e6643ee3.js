"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6119],{15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>x,useMDXComponents:()=>p,withMDXComponents:()=>s});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){return function(n){var t=p(n.components);return r.createElement(e,a({},n,{components:t}))}},p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=p(t),m=i,u=s["".concat(l,".").concat(m)]||s[m]||f[m]||a;return t?r.createElement(u,o(o({ref:n},c),{},{components:t})):r.createElement(u,o({ref:n},c))}));function x(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=h;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},51230:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=t(58168),i=(t(96540),t(15680));const a={id:"haskell",title:"Haskell",sidebar_label:"Haskell"},l=void 0,o={unversionedId:"indexer/haskell",id:"indexer/haskell",title:"Haskell",description:"To index Haskell Glean consumes .hie files produced by the GHC compiler (>=8.8) with the flag -fwrite-ide-info.",source:"@site/docs/indexer/haskell.md",sourceDirName:"indexer",slug:"/indexer/haskell",permalink:"/docs/indexer/haskell",draft:!1,editUrl:"https://github.com/facebookincubator/Glean/tree/main/glean/website/docs/indexer/haskell.md",tags:[],version:"current",frontMatter:{id:"haskell",title:"Haskell",sidebar_label:"Haskell"},sidebar:"someSidebar",previous:{title:"Hack",permalink:"/docs/indexer/hack"},next:{title:"TypeScript",permalink:"/docs/indexer/lsif-typescript"}},d={},c=[{value:"Schema",id:"schema",level:2}],s=(p="SrcFile",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var p;const m={toc:c},u="wrapper";function f(e){let{components:n,...t}=e;return(0,i.mdx)(u,(0,r.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"To index ",(0,i.mdx)("a",{parentName:"p",href:"https://haskell.org"},"Haskell")," Glean consumes ",(0,i.mdx)("inlineCode",{parentName:"p"},".hie")," files produced by the GHC compiler (>=8.8) with the flag ",(0,i.mdx)("inlineCode",{parentName:"p"},"-fwrite-ide-info"),"."),(0,i.mdx)("h1",{id:"run-the-indexer"},"Run the indexer"),(0,i.mdx)("p",null,"The indexer is run via the main ",(0,i.mdx)("inlineCode",{parentName:"p"},"glean")," CLI tool."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"BUILD --ghc-options=-fwrite-ide-info\nglean --db-root DBDIR index haskell ROOT --db NAME/INSTANCE\n")),(0,i.mdx)("p",null,"where"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"BUILD")," is a build command such that GHC is called with ",(0,i.mdx)("inlineCode",{parentName:"li"},"-fwrite-ide-info")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"DBDIR")," is the directory where the Glean db will be created"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"ROOT")," is the root directory containing the build artifacts generated with the ",(0,i.mdx)("inlineCode",{parentName:"li"},"fwrite-ide-info")," flag (e.g. ",(0,i.mdx)("inlineCode",{parentName:"li"},"dist")," if a Cabal project)"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"name/hash")," is the name of the repository to create")),(0,i.mdx)("h2",{id:"schema"},"Schema"),(0,i.mdx)("p",null,"The schema is in ",(0,i.mdx)(s,{file:"glean/schema/source/hs.angle",mdxType:"SrcFile"})))}f.isMDXComponent=!0}}]);